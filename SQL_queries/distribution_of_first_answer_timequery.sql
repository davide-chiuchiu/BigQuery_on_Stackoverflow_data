-- CTE to select fields from original database and limit data usage. Tag fiels-- is processed so that each row has a unique tagWITH questions_subset AS (    SELECT         id,         creation_date,        accepted_answer_id,        unique_tag    FROM posts_questions    CROSS JOIN UNNEST(SPLIT(tags, '|')) AS unique_tag    WHERE accepted_answer_id IS NOT NULL),-- CTE to list the 10 most common tags for questions with answersmost_common_tags AS(    SELECT        unique_tag,        COUNT(*) AS tag_predominance    FROM questions_subset    GROUP BY unique_tag    ORDER BY tag_predominance DESC    LIMIT 8),-- CTE to get rid of questions that do not have the right tagsquestions_subset_2 AS(    SELECT        id,         creation_date,        accepted_answer_id,        unique_tag    FROM questions_subset    WHERE unique_tag IN (    SELECT         unique_tag     FROM most_common_tags)),-- CTE to get the hours before accepted answerhours_to_answer AS(    SELECT        questions_subset_2.id,        TIMESTAMP_DIFF(posts_answers.creation_date, questions_subset_2.creation_date, HOUR) AS hours_before_accepted_answer,        questions_subset_2.unique_tag    FROM questions_subset_2    INNER JOIN posts_answers        ON posts_answers.id = questions_subset_2.accepted_answer_id), -- CTE to bucketize the time before the accepted answer in a readable formbucketed_time_to_answer AS(    SELECT        id,        unique_tag,        CASE             WHEN hours_before_accepted_answer < 24         THEN '01-hours'            WHEN hours_before_accepted_answer < 24 * 7     THEN '02-days'            WHEN hours_before_accepted_answer < 24 * 7 * 4 THEN '03-weeks'            ELSE '04-months'        END AS bucketized_waitining_time    FROM hours_to_answer)            -- Query to get the bucketized distribution of waiting time for the accepted answer-- for the most common tags in the datasetSELECT     unique_tag,    bucketized_waitining_time,    COUNT(*) AS number_of_answersFROM bucketed_time_to_answerGROUP BY unique_tag, bucketized_waitining_timeORDER BY unique_tag, bucketized_waitining_time;